@model Onmiva.Models.Bill
@{
    ViewBag.Title = "EditBill";
    List<string> billStates = ((Onmiva.Controllers.BillManagementController)this.ViewContext.Controller).GetBillStateList();
    int counterVal = 0;
}
<br>
<br>
<h2>Sąskaitos redagavimo forma</h2>
<br>
@Html.ActionLink("Atgal", "BillManagement", "BillManagement")


@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            @ViewBag.Message
        </div>
    }
}
else
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-danger">
            <strong>Klaida </strong> @ViewBag.Message
        </div>
    }

}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <input type="hidden" name="NumberId" value="@Model.NumberId" />

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.PayComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PayComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PayComment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="StateId">
                    <option value="0">Pasirinkite...</option>

                    @foreach (var val in billStates)
                    {
                        counterVal += 1;
                        <option value="@counterVal">@val</option>
                    }
                </select>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayUntil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PayUntil, new { htmlAttributes = new { @class = "datepicker" } })
                @Html.ValidationMessageFor(model => model.PayUntil, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Patvirtinti" class="btn btn-default" />
            </div>
        </div>
    </div>

}



@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


}
