@model Onmiva.Models.Bill

@{
    ViewBag.Title = "CreateBill";
    List<Onmiva.Models.Order> orders = ((Onmiva.Controllers.BillManagementController)this.ViewContext.Controller).GetOrdersWithoutBill();
}

<h2>Sąskaitos sukūrimo forma</h2>
<br>


@Html.ActionLink("Atgal", "UserBillsList", "BillManagement")


@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            @ViewBag.Message
        </div>
    }
}
else
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-danger">
            <strong>Klaida </strong> @ViewBag.Message
        </div>
    }

}
@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" name="OrderId">
                <option value="">Pasirinkite...</option>
                @foreach (var val in orders)
                {
                    <option value="@val.Id">@val.Date - @val.Company - @val.Client - @val.Sum€ - @val.State</option>
                }
            </select>

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PayComment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PayComment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PayComment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PayUntil, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PayUntil, new { htmlAttributes = new { @class = "datepicker" } })
            @Html.ValidationMessageFor(model => model.PayUntil, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Sukurti" class="btn btn-default" />
        </div>
    </div>
</div>

    }


@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}


